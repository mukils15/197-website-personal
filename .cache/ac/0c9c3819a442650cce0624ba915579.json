{"id":"src/reducers/Posts.js","dependencies":[{"name":"C:\\Users\\mukil\\Documents\\197-website-personal\\package.json","includedInParent":true,"mtime":1635699898341},{"name":"../actions/actionTypes","loc":{"line":1,"column":28},"parent":"C:\\Users\\mukil\\Documents\\197-website-personal\\src\\reducers\\Posts.js","resolved":"C:\\Users\\mukil\\Documents\\197-website-personal\\src\\actions\\actionTypes.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = _default;\n\nvar _actionTypes = require(\"../actions/actionTypes\");\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar initialState = {\n  allPosts: [],\n  byIds: {}\n};\n\nfunction _default() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case _actionTypes.SUBMIT_POST:\n      {\n        var _action$payload = action.payload,\n            id = _action$payload.id,\n            content = _action$payload.content;\n        return _objectSpread(_objectSpread({}, state), {}, {\n          allIds: [].concat(_toConsumableArray(state.allIds), [id]),\n          byIds: _objectSpread(_objectSpread({}, state.byIds), {}, _defineProperty({}, id, {\n            content: content,\n            completed: false\n          }))\n        });\n      }\n\n    default:\n      return state;\n  }\n}"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":8,"column":0},"source":"src/reducers/Posts.js","original":{"line":1,"column":0}},{"generated":{"line":28,"column":0},"source":"src/reducers/Posts.js","original":{"line":3,"column":0}},{"name":"initialState","generated":{"line":28,"column":4},"source":"src/reducers/Posts.js","original":{"line":3,"column":6}},{"generated":{"line":28,"column":16},"source":"src/reducers/Posts.js","original":{"line":3,"column":18}},{"generated":{"line":28,"column":19},"source":"src/reducers/Posts.js","original":{"line":3,"column":21}},{"name":"allPosts","generated":{"line":29,"column":0},"source":"src/reducers/Posts.js","original":{"line":4,"column":2}},{"name":"allPosts","generated":{"line":29,"column":2},"source":"src/reducers/Posts.js","original":{"line":4,"column":2}},{"generated":{"line":29,"column":10},"source":"src/reducers/Posts.js","original":{"line":4,"column":10}},{"generated":{"line":29,"column":12},"source":"src/reducers/Posts.js","original":{"line":4,"column":12}},{"generated":{"line":29,"column":14},"source":"src/reducers/Posts.js","original":{"line":3,"column":21}},{"name":"byIds","generated":{"line":30,"column":0},"source":"src/reducers/Posts.js","original":{"line":5,"column":2}},{"name":"byIds","generated":{"line":30,"column":2},"source":"src/reducers/Posts.js","original":{"line":5,"column":2}},{"generated":{"line":30,"column":7},"source":"src/reducers/Posts.js","original":{"line":5,"column":7}},{"generated":{"line":30,"column":9},"source":"src/reducers/Posts.js","original":{"line":5,"column":9}},{"generated":{"line":31,"column":0},"source":"src/reducers/Posts.js","original":{"line":3,"column":21}},{"generated":{"line":31,"column":1},"source":"src/reducers/Posts.js","original":{"line":3,"column":0}},{"generated":{"line":33,"column":0},"source":"src/reducers/Posts.js","original":{"line":8,"column":15}},{"generated":{"line":33,"column":20},"source":"src/reducers/Posts.js","original":{"line":8,"column":54}},{"generated":{"line":34,"column":0},"source":"src/reducers/Posts.js","original":{"line":8,"column":54}},{"name":"state","generated":{"line":34,"column":6},"source":"src/reducers/Posts.js","original":{"line":8,"column":24}},{"generated":{"line":34,"column":11},"source":"src/reducers/Posts.js","original":{"line":8,"column":54}},{"name":"initialState","generated":{"line":34,"column":82},"source":"src/reducers/Posts.js","original":{"line":8,"column":32}},{"generated":{"line":34,"column":94},"source":"src/reducers/Posts.js","original":{"line":8,"column":54}},{"generated":{"line":35,"column":0},"source":"src/reducers/Posts.js","original":{"line":8,"column":54}},{"name":"action","generated":{"line":35,"column":6},"source":"src/reducers/Posts.js","original":{"line":8,"column":46}},{"generated":{"line":35,"column":12},"source":"src/reducers/Posts.js","original":{"line":8,"column":54}},{"generated":{"line":37,"column":0},"source":"src/reducers/Posts.js","original":{"line":9,"column":2}},{"name":"action","generated":{"line":37,"column":10},"source":"src/reducers/Posts.js","original":{"line":9,"column":10}},{"generated":{"line":37,"column":16},"source":"src/reducers/Posts.js","original":{"line":9,"column":16}},{"name":"type","generated":{"line":37,"column":17},"source":"src/reducers/Posts.js","original":{"line":9,"column":17}},{"generated":{"line":37,"column":21},"source":"src/reducers/Posts.js","original":{"line":9,"column":2}},{"generated":{"line":38,"column":0},"source":"src/reducers/Posts.js","original":{"line":10,"column":4}},{"name":"SUBMIT_POST","generated":{"line":38,"column":9},"source":"src/reducers/Posts.js","original":{"line":10,"column":9}},{"generated":{"line":38,"column":33},"source":"src/reducers/Posts.js","original":{"line":10,"column":4}},{"generated":{"line":39,"column":0},"source":"src/reducers/Posts.js","original":{"line":10,"column":22}},{"generated":{"line":40,"column":0},"source":"src/reducers/Posts.js","original":{"line":11,"column":6}},{"name":"action","generated":{"line":40,"column":30},"source":"src/reducers/Posts.js","original":{"line":11,"column":30}},{"generated":{"line":40,"column":36},"source":"src/reducers/Posts.js","original":{"line":11,"column":36}},{"name":"payload","generated":{"line":40,"column":37},"source":"src/reducers/Posts.js","original":{"line":11,"column":37}},{"generated":{"line":40,"column":44},"source":"src/reducers/Posts.js","original":{"line":11,"column":6}},{"generated":{"line":41,"column":0},"source":"src/reducers/Posts.js","original":{"line":11,"column":6}},{"name":"id","generated":{"line":41,"column":12},"source":"src/reducers/Posts.js","original":{"line":11,"column":14}},{"generated":{"line":41,"column":14},"source":"src/reducers/Posts.js","original":{"line":11,"column":6}},{"name":"id","generated":{"line":41,"column":33},"source":"src/reducers/Posts.js","original":{"line":11,"column":14}},{"generated":{"line":41,"column":35},"source":"src/reducers/Posts.js","original":{"line":11,"column":6}},{"generated":{"line":42,"column":0},"source":"src/reducers/Posts.js","original":{"line":11,"column":6}},{"name":"content","generated":{"line":42,"column":12},"source":"src/reducers/Posts.js","original":{"line":11,"column":18}},{"generated":{"line":42,"column":19},"source":"src/reducers/Posts.js","original":{"line":11,"column":6}},{"name":"content","generated":{"line":42,"column":38},"source":"src/reducers/Posts.js","original":{"line":11,"column":18}},{"generated":{"line":42,"column":45},"source":"src/reducers/Posts.js","original":{"line":11,"column":6}},{"generated":{"line":43,"column":0},"source":"src/reducers/Posts.js","original":{"line":12,"column":6}},{"name":"state","generated":{"line":43,"column":47},"source":"src/reducers/Posts.js","original":{"line":13,"column":11}},{"generated":{"line":43,"column":52},"source":"src/reducers/Posts.js","original":{"line":12,"column":6}},{"name":"allIds","generated":{"line":44,"column":0},"source":"src/reducers/Posts.js","original":{"line":14,"column":8}},{"name":"allIds","generated":{"line":44,"column":10},"source":"src/reducers/Posts.js","original":{"line":14,"column":8}},{"generated":{"line":44,"column":16},"source":"src/reducers/Posts.js","original":{"line":14,"column":14}},{"name":"state","generated":{"line":44,"column":47},"source":"src/reducers/Posts.js","original":{"line":14,"column":20}},{"generated":{"line":44,"column":52},"source":"src/reducers/Posts.js","original":{"line":14,"column":25}},{"name":"allIds","generated":{"line":44,"column":53},"source":"src/reducers/Posts.js","original":{"line":14,"column":26}},{"generated":{"line":44,"column":59},"source":"src/reducers/Posts.js","original":{"line":14,"column":14}},{"name":"id","generated":{"line":44,"column":63},"source":"src/reducers/Posts.js","original":{"line":14,"column":34}},{"generated":{"line":44,"column":65},"source":"src/reducers/Posts.js","original":{"line":14,"column":14}},{"generated":{"line":44,"column":67},"source":"src/reducers/Posts.js","original":{"line":12,"column":6}},{"name":"byIds","generated":{"line":45,"column":0},"source":"src/reducers/Posts.js","original":{"line":15,"column":8}},{"name":"byIds","generated":{"line":45,"column":10},"source":"src/reducers/Posts.js","original":{"line":15,"column":8}},{"generated":{"line":45,"column":15},"source":"src/reducers/Posts.js","original":{"line":15,"column":13}},{"name":"state","generated":{"line":45,"column":49},"source":"src/reducers/Posts.js","original":{"line":16,"column":13}},{"generated":{"line":45,"column":54},"source":"src/reducers/Posts.js","original":{"line":16,"column":18}},{"name":"byIds","generated":{"line":45,"column":55},"source":"src/reducers/Posts.js","original":{"line":16,"column":19}},{"generated":{"line":45,"column":60},"source":"src/reducers/Posts.js","original":{"line":15,"column":13}},{"name":"id","generated":{"line":45,"column":87},"source":"src/reducers/Posts.js","original":{"line":17,"column":11}},{"generated":{"line":45,"column":89},"source":"src/reducers/Posts.js","original":{"line":15,"column":13}},{"generated":{"line":45,"column":91},"source":"src/reducers/Posts.js","original":{"line":17,"column":16}},{"name":"content","generated":{"line":46,"column":0},"source":"src/reducers/Posts.js","original":{"line":18,"column":12}},{"name":"content","generated":{"line":46,"column":12},"source":"src/reducers/Posts.js","original":{"line":18,"column":12}},{"generated":{"line":46,"column":19},"source":"src/reducers/Posts.js","original":{"line":18,"column":19}},{"name":"content","generated":{"line":46,"column":21},"source":"src/reducers/Posts.js","original":{"line":18,"column":12}},{"generated":{"line":46,"column":28},"source":"src/reducers/Posts.js","original":{"line":17,"column":16}},{"name":"completed","generated":{"line":47,"column":0},"source":"src/reducers/Posts.js","original":{"line":19,"column":12}},{"name":"completed","generated":{"line":47,"column":12},"source":"src/reducers/Posts.js","original":{"line":19,"column":12}},{"generated":{"line":47,"column":21},"source":"src/reducers/Posts.js","original":{"line":19,"column":21}},{"generated":{"line":47,"column":23},"source":"src/reducers/Posts.js","original":{"line":19,"column":23}},{"generated":{"line":48,"column":0},"source":"src/reducers/Posts.js","original":{"line":17,"column":16}},{"generated":{"line":48,"column":11},"source":"src/reducers/Posts.js","original":{"line":15,"column":13}},{"generated":{"line":49,"column":0},"source":"src/reducers/Posts.js","original":{"line":12,"column":6}},{"generated":{"line":50,"column":0},"source":"src/reducers/Posts.js","original":{"line":23,"column":5}},{"generated":{"line":52,"column":0},"source":"src/reducers/Posts.js","original":{"line":24,"column":4}},{"generated":{"line":53,"column":0},"source":"src/reducers/Posts.js","original":{"line":25,"column":6}},{"name":"state","generated":{"line":53,"column":13},"source":"src/reducers/Posts.js","original":{"line":25,"column":13}},{"generated":{"line":53,"column":18},"source":"src/reducers/Posts.js","original":{"line":25,"column":6}},{"generated":{"line":54,"column":0},"source":"src/reducers/Posts.js","original":{"line":9,"column":2}},{"generated":{"line":55,"column":0},"source":"src/reducers/Posts.js","original":{"line":27,"column":1}}],"sources":{"src/reducers/Posts.js":"import { SUBMIT_POST } from \"../actions/actionTypes\";\r\n\r\nconst initialState = {\r\n  allPosts: [],\r\n  byIds: {}\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case SUBMIT_POST: {\r\n      const { id, content } = action.payload;\r\n      return {\r\n        ...state,\r\n        allIds: [...state.allIds, id],\r\n        byIds: {\r\n          ...state.byIds,\r\n          [id]: {\r\n            content,\r\n            completed: false\r\n          }\r\n        }\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n"},"lineCount":null}},"error":null,"hash":"a26e8d5c67ee0e77b3b9db75092dcbeb","cacheData":{"env":{}}}